plugins {
	id 'java'
	id 'antlr'
}

group = 'org.fulib'
version = '0.1.0'

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
	maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

sourceSets.create('gen')

// Das
dependencies {
	// https://mvnrepository.com/artifact/org.antlr/antlr4
	antlr group: 'org.antlr', name: 'antlr4', version: '4.8-1'

	// https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
	implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.8-1'

	genImplementation rootProject
	genImplementation 'org.fulib:fulibTools:1.2.1'

	implementation rootProject

	implementation 'org.fulib:fulibYaml:1.3.0'
	implementation 'org.fulib:fulibTools:1.2.1'
	implementation 'org.fulib:fulibMockups:0.2.0'
	implementation 'org.fulib:fulibTables:1.4.0-alpha.1'

	implementation 'org.json:json:20190722'
	implementation 'com.sparkjava:spark-core:2.8.+'

	// https://mvnrepository.com/artifact/junit/junit
	testImplementation group: 'junit', name: 'junit', version: '4.12'
   testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'


   testImplementation 'com.codeborne:selenide:5.9.0'
}

tasks.register('genModel', JavaExec) {
	it.classpath = sourceSets.gen.runtimeClasspath
	it.main = 'unikassel.websystem.GenModel'
	it.workingDir = project.projectDir

	it.inputs.dir('src/main/java')
	it.outputs.dir('src/main/java')
}

// --------------- ANTLR ---------------

def generatedANTLRDir = "$buildDir/generated/sources/antlr/java/main/"
def parserPackage = 'unikassel.bpmn2wf.WorkFlows.parser'

sourceSets.main.java.srcDir(generatedANTLRDir)

// https://stackoverflow.com/questions/40995727/gradle-cant-find-antlr-token-file
generateGrammarSource {
	arguments += [ '-package', parserPackage ]
	outputDirectory = file("$generatedANTLRDir/${ parserPackage.replace('.', '/') }/")
}

// https://github.com/gradle/gradle/issues/820
configurations.compile {
	extendsFrom = extendsFrom.findAll { it != configurations.antlr }
}
