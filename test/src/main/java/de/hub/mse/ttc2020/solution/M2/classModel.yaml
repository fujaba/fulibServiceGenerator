- c1: 	ClassModel
  classes: 	m2Editor2 	modelCommand3 	removeCommand4 	pattern5 	patternObject6 	patternAttribute7 	patternLink8 	m2Service9 	commandStream10 	addStreamCommand11 	m2App12 	page13 	line14 	person15 	dog16 	havePerson17 	haveDog18 	
  defaultPropertyStyle: 	POJO
  defaultRoleType: 	"java.util.ArrayList<%s>"
  mainJavaDir: 	"test/src/main/java"
  packageName: 	de.hub.mse.ttc2020.solution.M2
  packageSrcFolder: 	"test/src/main/java/de/hub/mse/ttc2020/solution/M2"

- m2Editor2: 	Clazz
  attributes: 	activeCommands19 	removeCommands20 	commandListeners21 	mapOfFrames22 	mapOfModelObjects23 	isoDateFormat24 	lastTime25 	timeDelta26 	
  importList: 	null 	null 	null 	null 	null 	
  methods: 	f27 	f28 	f29 	f30 	f31 	f32 	f33 	f34 	
  model: 	c1
  modified: 	false
  name: 	M2Editor
  propertyStyle: 	POJO
  roles: 	service35 	

- modelCommand3: 	Clazz
  attributes: 	id36 	time37 	
  methods: 	f38 	f39 	
  model: 	c1
  modified: 	false
  name: 	ModelCommand
  propertyStyle: 	POJO
  subClasses: 	removeCommand4 	addStreamCommand11 	havePerson17 	haveDog18 	

- removeCommand4: 	Clazz
  importList: 	null 	null 	null 	
  methods: 	f40 	
  model: 	c1
  modified: 	false
  name: 	RemoveCommand
  propertyStyle: 	POJO
  superClass: 	modelCommand3

- pattern5: 	Clazz
  model: 	c1
  modified: 	false
  name: 	Pattern
  propertyStyle: 	POJO
  roles: 	objects41 	

- patternObject6: 	Clazz
  attributes: 	poId42 	handleObjectClass43 	handleObject44 	kind45 	
  model: 	c1
  modified: 	false
  name: 	PatternObject
  propertyStyle: 	POJO
  roles: 	pattern46 	attributes47 	links48 	incommingLinks49 	

- patternAttribute7: 	Clazz
  attributes: 	handleAttrName50 	commandParamName51 	
  model: 	c1
  modified: 	false
  name: 	PatternAttribute
  propertyStyle: 	POJO
  roles: 	object52 	

- patternLink8: 	Clazz
  attributes: 	handleLinkName53 	
  model: 	c1
  modified: 	false
  name: 	PatternLink
  propertyStyle: 	POJO
  roles: 	source54 	target55 	

- m2Service9: 	Clazz
  attributes: 	myPort56 	reflectorMap57 	currentSession58 	executor59 	spark60 	sessionToAppMap61 	
  importList: 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	null 	
  methods: 	f62 	f63 	f64 	f65 	f66 	f67 	
  model: 	c1
  modified: 	false
  name: 	M2Service
  propertyStyle: 	POJO
  roles: 	modelEditor68 	streams69 	

- commandStream10: 	Clazz
  attributes: 	name70 	targetUrlList71 	oldCommands72 	activeCommands73 	
  importList: 	null 	null 	null 	null 	null 	null 	null 	null 	
  methods: 	f74 	f75 	f76 	f77 	f78 	f79 	
  model: 	c1
  modified: 	false
  name: 	CommandStream
  propertyStyle: 	POJO
  roles: 	service80 	

- addStreamCommand11: 	Clazz
  attributes: 	incommingRoute81 	outgoingUrl82 	
  methods: 	f83 	
  model: 	c1
  modified: 	false
  name: 	AddStreamCommand
  propertyStyle: 	POJO
  superClass: 	modelCommand3

- m2App12: 	Clazz
  attributes: 	modelEditor84 	id85 	description86 	
  methods: 	f87 	
  model: 	c1
  modified: 	false
  name: 	M2App
  propertyStyle: 	POJO
  roles: 	content88 	

- page13: 	Clazz
  attributes: 	id89 	description90 	
  model: 	c1
  modified: 	false
  name: 	Page
  propertyStyle: 	POJO
  roles: 	app91 	content92 	

- line14: 	Clazz
  attributes: 	id93 	description94 	action95 	value96 	
  model: 	c1
  modified: 	false
  name: 	Line
  propertyStyle: 	POJO
  roles: 	page97 	

- person15: 	Clazz
  attributes: 	id98 	name99 	ybirth100 	
  model: 	c1
  modified: 	false
  name: 	Person
  propertyStyle: 	POJO

- dog16: 	Clazz
  attributes: 	id101 	name102 	owner103 	
  model: 	c1
  modified: 	false
  name: 	Dog
  propertyStyle: 	POJO

- havePerson17: 	Clazz
  attributes: 	name104 	age105 	
  model: 	c1
  modified: 	false
  name: 	HavePerson
  propertyStyle: 	POJO
  superClass: 	modelCommand3

- haveDog18: 	Clazz
  attributes: 	name106 	age107 	owner108 	
  model: 	c1
  modified: 	false
  name: 	HaveDog
  propertyStyle: 	POJO
  superClass: 	modelCommand3

- activeCommands19: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	activeCommands
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, ModelCommand>"

- removeCommands20: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	removeCommands
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, RemoveCommand>"

- commandListeners21: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	commandListeners
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, ArrayList<CommandStream>>"

- mapOfFrames22: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	mapOfFrames
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, Object>"

- mapOfModelObjects23: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	mapOfModelObjects
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, Object>"

- isoDateFormat24: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")"
  modified: 	false
  name: 	isoDateFormat
  propertyStyle: 	POJO
  type: 	DateFormat

- lastTime25: 	Attribute
  clazz: 	m2Editor2
  initialization: 	"isoDateFormat.format(new Date())"
  modified: 	false
  name: 	lastTime
  propertyStyle: 	POJO
  type: 	String

- timeDelta26: 	Attribute
  clazz: 	m2Editor2
  initialization: 	1
  modified: 	false
  name: 	timeDelta
  propertyStyle: 	POJO
  type: 	long

- f27: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public Object getOrCreate(Class clazz, String id)"
  methodBody: 	"      Object modelObject = mapOfModelObjects.get(id);
      if (modelObject != null) {
         return modelObject;
      }

      modelObject = getObjectFrame(clazz, id);

      mapOfFrames.remove(id);
      mapOfModelObjects.put(id, modelObject);

      return modelObject;
"
  modified: 	false

- f28: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public Object getObjectFrame(Class clazz, String id)"
  methodBody: 	"      try {
         Object modelObject = mapOfModelObjects.get(id);
         if (modelObject != null) {
            return modelObject;
         }

         modelObject = mapOfFrames.get(id);
         if (modelObject != null) {
            return modelObject;
         }

         modelObject = (Object) clazz.getConstructor().newInstance();
         Method setIdMethod = clazz.getMethod(\"setId\", String.class);
         setIdMethod.invoke(modelObject, id);
         mapOfFrames.put(id, modelObject);

         return modelObject;
      }
      catch (Exception e) {
         throw new RuntimeException(e);
      }
"
  modified: 	false

- f29: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public Object getModelObject(String id)"
  methodBody: 	"   return mapOfModelObjects.get(id);
"
  modified: 	false

- f30: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public String getTime()"
  methodBody: 	"      String newTime = isoDateFormat.format(new Date());
      if (newTime.compareTo(lastTime) <= 0) {
         try {
            Date lastDate = isoDateFormat.parse(lastTime);
            long millis = lastDate.getTime();
            millis += timeDelta;
            Date newDate = new Date(millis);
            newTime = isoDateFormat.format(newDate);
         }
         catch (Exception e) {
            e.printStackTrace();
         }
      }
      lastTime = newTime;
      return newTime;
"
  modified: 	false

- f31: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public void fireCommandExecuted(ModelCommand command)"
  methodBody: 	"      String commandName = command.getClass().getSimpleName();
      ArrayList<CommandStream> listeners = commandListeners.computeIfAbsent(commandName, s -> new ArrayList<>());
      for (CommandStream stream : listeners) {
         stream.publish(command);
      }
"
  modified: 	false

- f32: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public M2Editor addCommandListener(String commandName, CommandStream stream)"
  methodBody: 	"      ArrayList<CommandStream> listeners = commandListeners.computeIfAbsent(commandName, s -> new ArrayList<>());
      listeners.add(stream);
      return this;
"
  modified: 	false

- f33: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public void loadYaml(String yamlString)"
  methodBody: 	"      java.util.Map map = Yaml.forPackage(\"de.hub.mse.ttc2020.solution.M2\").decode(yamlString);
      for (Object value : map.values()) {
         ModelCommand cmd = (ModelCommand) value;
         execute(cmd);
      }
"
  modified: 	false

- f34: 	FMethod
  clazz: 	m2Editor2
  declaration: 	"public void execute(ModelCommand command)"
  methodBody: 	"      String id = command.getId();
      if (id == null) {
         id = \"obj\" + activeCommands.size();
         command.setId(id);
      }

      String time = command.getTime();
      if (time == null) {
         time = getTime();
         command.setTime(time);
      }

      ModelCommand oldCommand = activeCommands.get(id);

      if (oldCommand != null && oldCommand.getTime().compareTo(time) >= 0) {
         // already updated
         return;
      }

      if (oldCommand != null && oldCommand instanceof RemoveCommand) {
         // object is dead, do not recreate
         return;
      }

      command.run(this);

      activeCommands.put(id, command);
"
  modified: 	false

- service35: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	m2Editor2
  modified: 	false
  name: 	service
  other: 	modelEditor68
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- id36: 	Attribute
  clazz: 	modelCommand3
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- time37: 	Attribute
  clazz: 	modelCommand3
  modified: 	false
  name: 	time
  propertyStyle: 	POJO
  type: 	String

- f38: 	FMethod
  clazz: 	modelCommand3
  declaration: 	"public Object run(M2Editor editor)"
  methodBody: 	"      return null;
"
  modified: 	false

- f39: 	FMethod
  clazz: 	modelCommand3
  declaration: 	"public void undo(M2Editor editor)"
  methodBody: 	"      // overwrite when necessary
"
  modified: 	false

- f40: 	FMethod
  clazz: 	removeCommand4
  declaration: 	"public Object run(M2Editor editor)"
  methodBody: 	"      java.util.Map<String, Object> mapOfModelObjects = editor.getMapOfModelObjects();
      java.util.Map<String, Object> mapOfFrames = editor.getMapOfFrames();

      Object oldObject = mapOfModelObjects.remove(getId());

      if (oldObject != null) {
         mapOfFrames.put(getId(), oldObject);
      }

      // call undo on old command
      ModelCommand oldCommand = editor.getActiveCommands().get(getId());
      oldCommand.undo(editor);

      return null;
"
  modified: 	false

- objects41: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	pattern5
  modified: 	false
  name: 	objects
  other: 	pattern46
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- poId42: 	Attribute
  clazz: 	patternObject6
  modified: 	false
  name: 	poId
  propertyStyle: 	POJO
  type: 	String

- handleObjectClass43: 	Attribute
  clazz: 	patternObject6
  modified: 	false
  name: 	handleObjectClass
  propertyStyle: 	POJO
  type: 	Class

- handleObject44: 	Attribute
  clazz: 	patternObject6
  modified: 	false
  name: 	handleObject
  propertyStyle: 	POJO
  type: 	Object

- kind45: 	Attribute
  clazz: 	patternObject6
  modified: 	false
  name: 	kind
  propertyStyle: 	POJO
  type: 	String

- pattern46: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	patternObject6
  modified: 	false
  name: 	pattern
  other: 	objects41
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- attributes47: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	patternObject6
  modified: 	false
  name: 	attributes
  other: 	object52
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- links48: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	patternObject6
  modified: 	false
  name: 	links
  other: 	source54
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- incommingLinks49: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	patternObject6
  modified: 	false
  name: 	incommingLinks
  other: 	target55
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- handleAttrName50: 	Attribute
  clazz: 	patternAttribute7
  modified: 	false
  name: 	handleAttrName
  propertyStyle: 	POJO
  type: 	String

- commandParamName51: 	Attribute
  clazz: 	patternAttribute7
  modified: 	false
  name: 	commandParamName
  propertyStyle: 	POJO
  type: 	String

- object52: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	patternAttribute7
  modified: 	false
  name: 	object
  other: 	attributes47
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- handleLinkName53: 	Attribute
  clazz: 	patternLink8
  modified: 	false
  name: 	handleLinkName
  propertyStyle: 	POJO
  type: 	String

- source54: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	patternLink8
  modified: 	false
  name: 	source
  other: 	links48
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- target55: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	patternLink8
  modified: 	false
  name: 	target
  other: 	incommingLinks49
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- myPort56: 	Attribute
  clazz: 	m2Service9
  modified: 	false
  name: 	myPort
  propertyStyle: 	POJO
  type: 	int

- reflectorMap57: 	Attribute
  clazz: 	m2Service9
  modified: 	false
  name: 	reflectorMap
  propertyStyle: 	POJO
  type: 	ReflectorMap

- currentSession58: 	Attribute
  clazz: 	m2Service9
  modified: 	false
  name: 	currentSession
  propertyStyle: 	POJO
  type: 	String

- executor59: 	Attribute
  clazz: 	m2Service9
  modified: 	false
  name: 	executor
  propertyStyle: 	POJO
  type: 	"ExecutorService "

- spark60: 	Attribute
  clazz: 	m2Service9
  modified: 	false
  name: 	spark
  propertyStyle: 	POJO
  type: 	Service

- sessionToAppMap61: 	Attribute
  clazz: 	m2Service9
  initialization: 	"new LinkedHashMap()"
  modified: 	false
  name: 	sessionToAppMap
  propertyStyle: 	POJO
  type: 	"LinkedHashMap<String, M2App>"

- f62: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public void start()"
  methodBody: 	"      if (myPort <= 0) {
         myPort = 4571;
      }
      String envPort = System.getenv(\"PORT\");
      if (envPort != null) {
         myPort = Integer.parseInt(envPort);
      }
      executor = java.util.concurrent.Executors.newSingleThreadExecutor();
      setModelEditor(new M2Editor());
      reflectorMap = new ReflectorMap(this.getClass().getPackage().getName());
      spark = Service.ignite();
      try { spark.port(myPort);} catch (Exception e) {};
      spark.get(\"/\", (req, res) -> executor.submit( () -> this.getFirstRoot(req, res)).get());
      spark.get(\"/M2\", (req, res) -> executor.submit( () -> this.getFirstRoot(req, res)).get());
      spark.post(\"/cmd\", (req, res) -> executor.submit( () -> this.cmd(req, res)).get());
      spark.post(\"/M2cmd\", (req, res) -> executor.submit( () -> this.cmd(req, res)).get());
      spark.post(\"/connect\", (req, res) -> executor.submit( () -> this.connect(req, res)).get());
      // there are no streams

      spark.notFound((req, resp) -> {
         return \"404 not found: \" + req.requestMethod() + req.url() + req.body();
      });

      java.util.logging.Logger.getGlobal().info(\"M2 Service is listening on port \" + myPort);
"
  modified: 	false

- f63: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public String getFirstRoot(Request req, Response res)"
  methodBody: 	"      currentSession = \"\" + (sessionToAppMap.size() + 1);
      return root(req, res);
"
  modified: 	false

- f64: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public String root(Request req, Response res)"
  methodBody: 	"      try
      {
         M2App myApp = this.sessionToAppMap.get(currentSession);
         if (myApp == null) {
            myApp = new M2App().init(this.modelEditor);
            sessionToAppMap.put(currentSession, myApp);
         }

         java.util.Map<String, String> params = req.params();
         java.io.StringWriter stringWriter = new java.io.StringWriter();
         stringWriter.write(
               \"<html>\n\" +
                     \"<head>\n\" +
                     \"    <meta charset=\\"utf-8\\">\n\" +
                     \"    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">\n\" +
                     \"\n\" +
                     \"    <link rel=\\"stylesheet\\" href=\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\">\n\" +
                     \"    <script src=\\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\\"></script>\n\" +
                     \"</head>\n\n\"
         );
         MockupTools.htmlTool().dumpScreen(stringWriter, myApp);
         stringWriter.write(\"\n</html>\n\");
         StringBuilder page = new StringBuilder(stringWriter.toString());
         int paramPos = page.indexOf(\"_cmd: words[0],\");
         String sessionParam = String.format(\"_session: '%s', \", currentSession);
         page.insert(paramPos, sessionParam);
         int cmdUrlPos = page.indexOf(\"'/cmd'\");
         page.insert(cmdUrlPos + 2, \"M2\");
         String sessionPage = page.toString();
         return sessionPage;
      }
      catch (Exception e)
      {
         e.printStackTrace();
         return \"404 \" + e.getMessage();
      }
"
  modified: 	false

- f65: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public String cmd(Request req, Response res)"
  methodBody: 	"      String cmd = req.body();
      JSONObject jsonObject = new JSONObject(cmd);

      this.currentSession = jsonObject.getString(\"_session\");

      M2App app = sessionToAppMap.get(currentSession);

      if (app == null) {
         return \"404 could not find session \" + currentSession;
      }

      String cmdClassName = jsonObject.getString(\"_cmd\");
      String[] split = new String[0];
      if (cmdClassName.indexOf('?') > 0) {
         split = cmdClassName.split(\"\\?\");
         cmdClassName = split[0];
         jsonObject.put(\"_cmd\", cmdClassName);
         String params = split[1];
         String[] paramArray = params.split(\"\\&\");
         for (String oneParam : paramArray) {
            String[] keyValue = oneParam.split(\"\\=\");
            jsonObject.put(keyValue[0], keyValue[1]);
         }
      }

      if (jsonObject.keySet().size() > 3) {
         cmdClassName = jsonObject.getString(\"_cmd\");
         Reflector reflector = reflectorMap.getReflector(cmdClassName);
         Object cmdObject = reflector.newInstance();
         reflector.setValue(cmdObject, \"_app\", app, null);
         for (String key : jsonObject.keySet()) {
            if (key.startsWith(\"_\")) {
               continue;
            }
            else {
               // assign to command attribute
               String attrName = key;
               if (key.endsWith(\"In\")) {
                  attrName = key.substring(0, key.length() - 2);
               }
               String value = jsonObject.getString(key);
               reflector.setValue(cmdObject, attrName, value, null);
            }
         }
         // call command
         try {
            Method runMethod = cmdObject.getClass().getMethod(\"run\", M2Editor.class);
            runMethod.invoke(cmdObject, modelEditor);

         }
         catch (Exception e) {
            e.printStackTrace();
            return \"404 \" + e.getMessage();
         }
      }

      // next page
      String newPage = jsonObject.getString(\"_newPage\");
      try {
         Method method = app.getClass().getMethod(newPage, new Class[0]);
         method.invoke(app);
      }
      catch (Exception e) {
         return \"404 app has no method to compute page \" + newPage+ \"\n\" + e.getMessage();
      }

      return root(req, res);
"
  modified: 	false

- f66: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public String connect(Request req, Response res)"
  methodBody: 	"      String body = req.body();
      LinkedHashMap<String, Object> cmdList = org.fulib.yaml.Yaml.forPackage(AddStreamCommand.class.getPackage().getName()).decode(body);
      for (Object value : cmdList.values()) {
         ModelCommand cmd = (ModelCommand) value;
         cmd.run(modelEditor);
      }
      return \"200\";
"
  modified: 	false

- f67: 	FMethod
  clazz: 	m2Service9
  declaration: 	"public CommandStream getStream(String streamName)"
  methodBody: 	"      for (CommandStream stream : this.getStreams()) {
         if (stream.getName().equals(streamName)) {
            return stream;
         }
      }
      CommandStream newStream = new CommandStream().setName(streamName);
      newStream.setService(this);
      withStreams(newStream);
      newStream.start();
      return newStream;
"
  modified: 	false

- modelEditor68: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	m2Service9
  modified: 	false
  name: 	modelEditor
  other: 	service35
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- streams69: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	m2Service9
  modified: 	false
  name: 	streams
  other: 	service80
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- name70: 	Attribute
  clazz: 	commandStream10
  modified: 	false
  name: 	name
  propertyStyle: 	POJO
  type: 	String

- targetUrlList71: 	Attribute
  clazz: 	commandStream10
  initialization: 	"new ArrayList<>()"
  modified: 	false
  name: 	targetUrlList
  propertyStyle: 	POJO
  type: 	"ArrayList<String>"

- oldCommands72: 	Attribute
  clazz: 	commandStream10
  initialization: 	"new ArrayList<>()"
  modified: 	false
  name: 	oldCommands
  propertyStyle: 	POJO
  type: 	"ArrayList<ModelCommand>"

- activeCommands73: 	Attribute
  clazz: 	commandStream10
  initialization: 	"new java.util.LinkedHashMap<>()"
  modified: 	false
  name: 	activeCommands
  propertyStyle: 	POJO
  type: 	"java.util.Map<String, ModelCommand>"

- f74: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public void publish(ModelCommand cmd)"
  methodBody: 	"      String yaml = Yaml.encode(cmd);
      activeCommands.put(cmd.getId(), cmd);
      oldCommands.add(cmd);
      send();
"
  modified: 	false

- f75: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public void send()"
  methodBody: 	"      String yaml = Yaml.encode(activeCommands.values());
      for (String targetUrl : targetUrlList) {
         try {
            URL url = new URL(targetUrl);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod(\"POST\");
            con.setDoOutput(true);
            DataOutputStream out = new DataOutputStream(con.getOutputStream());
            out.writeBytes(yaml);
            out.flush();

            InputStream inputStream = con.getInputStream();
            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
            BufferedReader in = new BufferedReader(inputStreamReader);
            String inputLine;
            StringBuffer content = new StringBuffer();
            while ((inputLine = in.readLine()) != null) {
               content.append(inputLine);
            }
            in.close();
            out.close();
            con.disconnect();

            // got an answer, clear active commands
            activeCommands.clear();
            LinkedHashMap<String, Object> map = Yaml.forPackage(service.getClass().getPackage().getName())
                  .decode(content.toString());
            executeCommands(map.values());

         }
         catch (Exception e) {
            e.printStackTrace();
         }
      }
"
  modified: 	false

- f76: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public void executeCommands(Collection values)"
  methodBody: 	"      for (Object value : values) {
         try {
            ModelCommand cmd = (ModelCommand) value;
            this.service.getExecutor().submit(() -> cmd.run(this.service.getModelEditor()));
         }
         catch (Exception e) {
            e.printStackTrace();
         }
      }
"
  modified: 	false

- f77: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public CommandStream start()"
  methodBody: 	"      service.getSpark().post(\"/\" + name, (req, res) -> handlePostRequest(req, res));
      return this;
"
  modified: 	false

- f78: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public String handlePostRequest(Request req, Response res)"
  methodBody: 	"      String body = req.body();
      LinkedHashMap<String, Object> commandMap = Yaml.forPackage(this.getClass().getPackage().getName())
            .decode(body);

      Collection values = commandMap.values();
      executeCommands(values);

      return \"OK\";
"
  modified: 	false

- f79: 	FMethod
  clazz: 	commandStream10
  declaration: 	"public void addCommandsToBeStreamed(String... commandList)"
  methodBody: 	"      for (String cmd : commandList) {
         service.getModelEditor().addCommandListener(cmd, this);
      }
"
  modified: 	false

- service80: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	commandStream10
  modified: 	false
  name: 	service
  other: 	streams69
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- incommingRoute81: 	Attribute
  clazz: 	addStreamCommand11
  modified: 	false
  name: 	incommingRoute
  propertyStyle: 	POJO
  type: 	String

- outgoingUrl82: 	Attribute
  clazz: 	addStreamCommand11
  modified: 	false
  name: 	outgoingUrl
  propertyStyle: 	POJO
  type: 	String

- f83: 	FMethod
  clazz: 	addStreamCommand11
  declaration: 	"public Object run(M2Editor editor)"
  methodBody: 	"      CommandStream stream = editor.getService().getStream(incommingRoute);
      stream.getTargetUrlList().add(outgoingUrl);
      return null;
"
  modified: 	false

- modelEditor84: 	Attribute
  clazz: 	m2App12
  modified: 	false
  name: 	modelEditor
  propertyStyle: 	POJO
  type: 	M2Editor

- id85: 	Attribute
  clazz: 	m2App12
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- description86: 	Attribute
  clazz: 	m2App12
  modified: 	false
  name: 	description
  propertyStyle: 	POJO
  type: 	String

- f87: 	FMethod
  clazz: 	m2App12
  declaration: 	"public M2App init(M2Editor editor)"
  methodBody: 	"      this.modelEditor = editor;
      this.setId(\"root\");
      this.setDescription(\"M2 App\");
      return this;
"
  modified: 	false

- content88: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	m2App12
  modified: 	false
  name: 	content
  other: 	app91
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- id89: 	Attribute
  clazz: 	page13
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- description90: 	Attribute
  clazz: 	page13
  modified: 	false
  name: 	description
  propertyStyle: 	POJO
  type: 	String

- app91: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	page13
  modified: 	false
  name: 	app
  other: 	content88
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- content92: 	AssocRole
  aggregation: 	false
  cardinality: 	42
  clazz: 	page13
  modified: 	false
  name: 	content
  other: 	page97
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- id93: 	Attribute
  clazz: 	line14
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- description94: 	Attribute
  clazz: 	line14
  modified: 	false
  name: 	description
  propertyStyle: 	POJO
  type: 	String

- action95: 	Attribute
  clazz: 	line14
  modified: 	false
  name: 	action
  propertyStyle: 	POJO
  type: 	String

- value96: 	Attribute
  clazz: 	line14
  modified: 	false
  name: 	value
  propertyStyle: 	POJO
  type: 	String

- page97: 	AssocRole
  aggregation: 	false
  cardinality: 	1
  clazz: 	line14
  modified: 	false
  name: 	page
  other: 	content92
  propertyStyle: 	POJO
  roleType: 	"java.util.ArrayList<%s>"

- id98: 	Attribute
  clazz: 	person15
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- name99: 	Attribute
  clazz: 	person15
  modified: 	false
  name: 	name
  propertyStyle: 	POJO
  type: 	String

- ybirth100: 	Attribute
  clazz: 	person15
  modified: 	false
  name: 	ybirth
  propertyStyle: 	POJO
  type: 	int

- id101: 	Attribute
  clazz: 	dog16
  modified: 	false
  name: 	id
  propertyStyle: 	POJO
  type: 	String

- name102: 	Attribute
  clazz: 	dog16
  modified: 	false
  name: 	name
  propertyStyle: 	POJO
  type: 	String

- owner103: 	Attribute
  clazz: 	dog16
  modified: 	false
  name: 	owner
  propertyStyle: 	POJO
  type: 	Person

- name104: 	Attribute
  clazz: 	havePerson17
  modified: 	false
  name: 	name
  propertyStyle: 	POJO
  type: 	String

- age105: 	Attribute
  clazz: 	havePerson17
  modified: 	false
  name: 	age
  propertyStyle: 	POJO
  type: 	int

- name106: 	Attribute
  clazz: 	haveDog18
  modified: 	false
  name: 	name
  propertyStyle: 	POJO
  type: 	String

- age107: 	Attribute
  clazz: 	haveDog18
  modified: 	false
  name: 	age
  propertyStyle: 	POJO
  type: 	int

- owner108: 	Attribute
  clazz: 	haveDog18
  modified: 	false
  name: 	owner
  propertyStyle: 	POJO
  type: 	String

